{"ast":null,"code":"var _jsxFileName = \"/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/Routes/PublicRoute.js\";\nimport React, { Children } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicRoute = _ref => {\n  let {\n    restricted,\n    children,\n    ...rest\n  } = _ref;\n  const isAuthenticated = localStorage.getItem('isAuthenticated');\n  console.log(isAuthenticated);\n  consoler;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return isAuthenticated === true && restricted === true ? Children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/',\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n//   if (!isAuthenticated) {\n//     return (\n//       <Redirect\n//         to={{\n//           pathname: '/',\n//         }}\n//       />\n//     );\n//   }\n//   return <Route {...rest} render={(tempProps) => children} />;\n// };\n_c = PublicRoute;\nexport default PublicRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["React","Children","Route","Redirect","PublicRoute","restricted","children","rest","isAuthenticated","localStorage","getItem","console","log","consoler","location","pathname","state","from"],"sources":["/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/Routes/PublicRoute.js"],"sourcesContent":["import React, { Children } from 'react';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PublicRoute = ({restricted, children, ...rest }) => {\n  const isAuthenticated = localStorage.getItem('isAuthenticated');\n  console.log(isAuthenticated);\n  consoler\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated === true && restricted === true? (\n          Children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n//   if (!isAuthenticated) {\n//     return (\n//       <Redirect\n//         to={{\n//           pathname: '/',\n//         }}\n//       />\n//     );\n//   }\n//   return <Route {...rest} render={(tempProps) => children} />;\n// };\n\nexport default PublicRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC;AAEnD,MAAMC,WAAW,GAAG,QAAsC;EAAA,IAArC;IAACC,UAAU;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC;EACnD,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EAC/DC,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;EAC5BK,QAAQ;EAER,oBACE,QAAC,KAAK;IAAA,GACAN,IAAI;IACR,MAAM,EAAE;MAAA,IAAC;QAAEO;MAAS,CAAC;MAAA,OACnBN,eAAe,KAAK,IAAI,IAAIH,UAAU,KAAK,IAAI,GAC7CJ,QAAQ,gBAER,QAAC,QAAQ;QACP,EAAE,EAAE;UACFc,QAAQ,EAAE,GAAG;UACbC,KAAK,EAAE;YAAEC,IAAI,EAAEH;UAAS;QAC1B;MAAE;QAAA;QAAA;QAAA;MAAA,QAEL;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACD;AAEN,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KAjCMV,WAAW;AAmCjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}