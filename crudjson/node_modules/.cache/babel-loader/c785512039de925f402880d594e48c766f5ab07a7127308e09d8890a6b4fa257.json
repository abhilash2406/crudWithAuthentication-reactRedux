{"ast":null,"code":"var _jsxFileName = \"/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport DataTable from 'react-data-table-component';\nimport ReactModal from 'react-modal';\nimport { connect } from 'react-redux';\nimport { setPosts, showForm, addPost, getPost, cancelForm, editPost } from '../actions';\nimport moment from 'moment/moment';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = _ref => {\n  _s();\n  let {\n    posts,\n    setPosts,\n    showForm,\n    addPost,\n    getPost,\n    cancelForm,\n    editPost\n  } = _ref;\n  // console.log('posts', posts);\n\n  const [delModalConfig, setDelModalConfig] = useState({\n    showModal: false,\n    deleteId: null\n  });\n  useEffect(() => {\n    setPosts();\n  }, []);\n  ReactModal.setAppElement('#root');\n  const [showModal, setShowModal] = useState(false);\n  const columns = [{\n    name: 'ID',\n    selector: row => row.id\n  }, {\n    name: 'Title',\n    selector: row => row.title,\n    sortable: true\n  }, {\n    name: 'Description',\n    selector: row => row.body\n  }, {\n    name: 'Created Date',\n    selector: row => moment(row.createdAt).format('DD-MM-YYYY')\n  }, {\n    name: 'Action',\n    selector: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: () => onEditRecord(row),\n        children: [\"Edit\", posts.onEditLoading && posts.selectedPostId === row.id ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-arrow-clockwise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger\",\n        onClick: () => onDelModal(row),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }];\n  const onDelModal = row => {\n    setDelModalConfig({\n      showModal: true,\n      deleteId: row.id\n    });\n  };\n  const onCloseModal = row => {\n    setDelModalConfig({\n      showModal: true,\n      deleteId: row.id\n    });\n  };\n  const onEditRecord = row => {\n    console.log(row.id);\n    getPost(row.id);\n  };\n  const onFormSubmit = data => {\n    if (posts.selectedPostId) {\n      editPost(posts.selectedPostId, {\n        title: data.title,\n        body: data.description,\n        updatedAt: new Date().getTime()\n      });\n    } else {\n      addPost({\n        title: data.title,\n        body: data.description,\n        createdAt: new Date().getTime()\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header d-flex justify-content-between align -item-center m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"POSTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactModal, {\n        isOpen: showModal,\n        contentLabel: \"Minimal Modal Example\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-danger\",\n          onClick: () => setShowModal(false),\n          children: \"Close Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), posts.showForm ? null : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => showForm(true),\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), posts.showForm ? /*#__PURE__*/_jsxDEV(Form, {\n      onFormSubmit: onFormSubmit,\n      selectedPostDetails: posts.selectedPostDetails,\n      onCancel: cancelForm,\n      onSumbitLoading: posts.addPostLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: posts.data,\n      pagination: true,\n      progressPending: posts.loadingData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"P0IiSEBW63j2tkDhxqmRKB+t/M0=\");\n_c = PostList;\nconst mapStateToProps = state => {\n  // console.log('state', state);\n  return {\n    posts: state.posts\n  };\n};\nexport default connect(mapStateToProps, {\n  setPosts,\n  showForm,\n  addPost,\n  getPost,\n  cancelForm,\n  editPost\n})(PostList);\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","_","DataTable","ReactModal","connect","setPosts","showForm","addPost","getPost","cancelForm","editPost","moment","Form","PostList","posts","delModalConfig","setDelModalConfig","showModal","deleteId","setAppElement","setShowModal","columns","name","selector","row","id","title","sortable","body","createdAt","format","onEditRecord","onEditLoading","selectedPostId","onDelModal","onCloseModal","console","log","onFormSubmit","data","description","updatedAt","Date","getTime","selectedPostDetails","addPostLoading","loadingData","mapStateToProps","state"],"sources":["/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport DataTable from 'react-data-table-component';\r\nimport ReactModal from 'react-modal';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setPosts,\r\n  showForm,\r\n  addPost,\r\n  getPost,\r\n  cancelForm,\r\n  editPost,\r\n} from '../actions';\r\nimport moment from 'moment/moment';\r\nimport Form from './Form';\r\n\r\nconst PostList = ({\r\n  posts,\r\n  setPosts,\r\n  showForm,\r\n  addPost,\r\n  getPost,\r\n  cancelForm,\r\n  editPost,\r\n}) => {\r\n  // console.log('posts', posts);\r\n\r\n  const[delModalConfig, setDelModalConfig]=useState({\r\n  showModal : false,\r\n  deleteId : null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPosts();\r\n  }, []);\r\n\r\n  ReactModal.setAppElement('#root'); \r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const columns = [\r\n    {\r\n      name: 'ID',\r\n      selector: (row) => row.id,\r\n    },\r\n    {\r\n      name: 'Title',\r\n      selector: (row) => row.title,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Description',\r\n      selector: (row) => row.body,\r\n    },\r\n    {\r\n      name: 'Created Date',\r\n      selector: (row) => moment(row.createdAt).format('DD-MM-YYYY'),\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: (row) => (\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={() => onEditRecord(row)}\r\n          >\r\n            Edit\r\n            {posts.onEditLoading && posts.selectedPostId === row.id ? (\r\n              <i className=\"bi bi-arrow-clockwise\"></i>\r\n            ) : null}\r\n          </button>\r\n          <button type='button' className='btn btn-danger' onClick={()=>onDelModal(row)}>Delete</button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\nconst onDelModal =(row)=> {\r\nsetDelModalConfig({\r\n  showModal : true,\r\n  deleteId : row.id,\r\n})\r\n};\r\n\r\nconst onCloseModal =(row)=> {\r\n  setDelModalConfig({\r\n    showModal : true,\r\n    deleteId : row.id,\r\n  })\r\n  };\r\n\r\n  const onEditRecord = (row) => {\r\n    console.log(row.id)\r\n    getPost(row.id);\r\n  };\r\n\r\n  const onFormSubmit = (data) => {\r\n    \r\n    if (posts.selectedPostId) {\r\n      editPost(posts.selectedPostId, {\r\n        title: data.title,\r\n        body: data.description,\r\n        updatedAt: new Date().getTime(),\r\n      });\r\n    } else {\r\n      addPost({\r\n        title: data.title,\r\n        body: data.description,\r\n        createdAt: new Date().getTime(),\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"header d-flex justify-content-between align -item-center m-2\">\r\n        <h1>POSTS</h1>\r\n\r\n        <ReactModal isOpen={showModal} contentLabel=\"Minimal Modal Example\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger\"\r\n            onClick={() => setShowModal(false)}\r\n          >\r\n            Close Modal\r\n          </button>\r\n        </ReactModal>\r\n\r\n        {posts.showForm ? null : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => showForm(true)}\r\n          >\r\n            Add Post\r\n          </button>\r\n        )}\r\n      </div>\r\n      {posts.showForm ? (\r\n        <Form\r\n          onFormSubmit={onFormSubmit}\r\n          selectedPostDetails={posts.selectedPostDetails}\r\n          onCancel={cancelForm}\r\n          onSumbitLoading={posts.addPostLoading}\r\n        />\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={posts.data}\r\n          pagination\r\n          progressPending={posts.loadingData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log('state', state);\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setPosts,\r\n  showForm,\r\n  addPost,\r\n  getPost,\r\n  cancelForm,\r\n  editPost,\r\n})(PostList);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,OAAO,QAAQ,aAAa;AACrC,SACEC,QAAQ,EACRC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,UAAU,EACVC,QAAQ,QACH,YAAY;AACnB,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,IAAI,MAAM,QAAQ;AAAC;AAE1B,MAAMC,QAAQ,GAAG,QAQX;EAAA;EAAA,IARY;IAChBC,KAAK;IACLT,QAAQ;IACRC,QAAQ;IACRC,OAAO;IACPC,OAAO;IACPC,UAAU;IACVC;EACF,CAAC;EACC;;EAEA,MAAK,CAACK,cAAc,EAAEC,iBAAiB,CAAC,GAAChB,QAAQ,CAAC;IAClDiB,SAAS,EAAG,KAAK;IACjBC,QAAQ,EAAG;EACX,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACdM,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAENF,UAAU,CAACgB,aAAa,CAAC,OAAO,CAAC;EAEjC,MAAM,CAACF,SAAS,EAAEG,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMqB,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACC;EACzB,CAAC,EACD;IACEH,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACE,KAAK;IAC5BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEL,IAAI,EAAE,aAAa;IACnBC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAACI;EACzB,CAAC,EACD;IACEN,IAAI,EAAE,cAAc;IACpBC,QAAQ,EAAGC,GAAG,IAAKb,MAAM,CAACa,GAAG,CAACK,SAAS,CAAC,CAACC,MAAM,CAAC,YAAY;EAC9D,CAAC,EACD;IACER,IAAI,EAAE,QAAQ;IACdC,QAAQ,EAAGC,GAAG,iBACZ;MAAA,wBACE;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,iBAAiB;QAC3B,OAAO,EAAE,MAAMO,YAAY,CAACP,GAAG,CAAE;QAAA,mBAGhCV,KAAK,CAACkB,aAAa,IAAIlB,KAAK,CAACmB,cAAc,KAAKT,GAAG,CAACC,EAAE,gBACrD;UAAG,SAAS,EAAC;QAAuB;UAAA;UAAA;UAAA;QAAA,QAAK,GACvC,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACD,eACT;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAE,MAAIS,UAAU,CAACV,GAAG,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA;EAGpG,CAAC,CACF;EACH,MAAMU,UAAU,GAAGV,GAAG,IAAI;IAC1BR,iBAAiB,CAAC;MAChBC,SAAS,EAAG,IAAI;MAChBC,QAAQ,EAAGM,GAAG,CAACC;IACjB,CAAC,CAAC;EACF,CAAC;EAED,MAAMU,YAAY,GAAGX,GAAG,IAAI;IAC1BR,iBAAiB,CAAC;MAChBC,SAAS,EAAG,IAAI;MAChBC,QAAQ,EAAGM,GAAG,CAACC;IACjB,CAAC,CAAC;EACF,CAAC;EAED,MAAMM,YAAY,GAAIP,GAAG,IAAK;IAC5BY,OAAO,CAACC,GAAG,CAACb,GAAG,CAACC,EAAE,CAAC;IACnBjB,OAAO,CAACgB,GAAG,CAACC,EAAE,CAAC;EACjB,CAAC;EAED,MAAMa,YAAY,GAAIC,IAAI,IAAK;IAE7B,IAAIzB,KAAK,CAACmB,cAAc,EAAE;MACxBvB,QAAQ,CAACI,KAAK,CAACmB,cAAc,EAAE;QAC7BP,KAAK,EAAEa,IAAI,CAACb,KAAK;QACjBE,IAAI,EAAEW,IAAI,CAACC,WAAW;QACtBC,SAAS,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO;MAC/B,CAAC,CAAC;IACJ,CAAC,MAAM;MACLpC,OAAO,CAAC;QACNmB,KAAK,EAAEa,IAAI,CAACb,KAAK;QACjBE,IAAI,EAAEW,IAAI,CAACC,WAAW;QACtBX,SAAS,EAAE,IAAIa,IAAI,EAAE,CAACC,OAAO;MAC/B,CAAC,CAAC;IACJ;EACF,CAAC;EACD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,8DAA8D;MAAA,wBAC3E;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAc,eAEd,QAAC,UAAU;QAAC,MAAM,EAAE1B,SAAU;QAAC,YAAY,EAAC,uBAAuB;QAAA,uBACjE;UACE,IAAI,EAAC,QAAQ;UACb,SAAS,EAAC,gBAAgB;UAC1B,OAAO,EAAE,MAAMG,YAAY,CAAC,KAAK,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAG5B;QAAA;QAAA;QAAA;MAAA,QACE,EAEZN,KAAK,CAACR,QAAQ,GAAG,IAAI,gBACpB;QACE,IAAI,EAAC,QAAQ;QACb,SAAS,EAAC,iBAAiB;QAC3B,OAAO,EAAE,MAAMA,QAAQ,CAAC,IAAI,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAIjC;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,EACLQ,KAAK,CAACR,QAAQ,gBACb,QAAC,IAAI;MACH,YAAY,EAAEgC,YAAa;MAC3B,mBAAmB,EAAExB,KAAK,CAAC8B,mBAAoB;MAC/C,QAAQ,EAAEnC,UAAW;MACrB,eAAe,EAAEK,KAAK,CAAC+B;IAAe;MAAA;MAAA;MAAA;IAAA,QACtC,gBAEF,QAAC,SAAS;MACR,OAAO,EAAExB,OAAQ;MACjB,IAAI,EAAEP,KAAK,CAACyB,IAAK;MACjB,UAAU;MACV,eAAe,EAAEzB,KAAK,CAACgC;IAAY;MAAA;MAAA;MAAA;IAAA,QAEtC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GA1IIjC,QAAQ;AAAA,KAARA,QAAQ;AA4Id,MAAMkC,eAAe,GAAIC,KAAK,IAAK;EACjC;EACA,OAAO;IAAElC,KAAK,EAAEkC,KAAK,CAAClC;EAAM,CAAC;AAC/B,CAAC;AAED,eAAeV,OAAO,CAAC2C,eAAe,EAAE;EACtC1C,QAAQ;EACRC,QAAQ;EACRC,OAAO;EACPC,OAAO;EACPC,UAAU;EACVC;AACF,CAAC,CAAC,CAACG,QAAQ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}