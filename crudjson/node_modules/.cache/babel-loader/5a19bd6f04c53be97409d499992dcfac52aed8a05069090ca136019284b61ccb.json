{"ast":null,"code":"var _jsxFileName = \"/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PostList from './PostList';\nimport PostCreate from './PostCreate';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Router, Route } from 'react-router-dom';\nimport { resetSuccessMessage } from '../actions';\nimport history from '../history';\nimport PostEdit from './PostEdit';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toastConfig = {\n  position: 'top-center',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark'\n};\nconst App = _ref => {\n  _s();\n  let {\n    resetSuccessMessage,\n    posts\n  } = _ref;\n  useEffect(() => {\n    if (posts.successMessage) {\n      toast.success(posts.successMessage, toastConfig);\n      resetSuccessMessage();\n    }\n  }, [posts.successMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React Google Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isLogin ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: profile.imageUrl,\n        alt: \"user image ref\",\n        referrerPolicy: \"no-referrer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"User Logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email Address: \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogout, {\n        clientId: clientId,\n        buttonText: \"Log out\",\n        onLogoutSuccess: logOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: clientId,\n      buttonText: \"Sign in with Google\",\n      onSuccess: onSuccess,\n      onFailure: onFailure,\n      cookiePolicy: 'single_host_origin',\n      isSignedIn: () => setIslogin(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Router, {\n      history: history,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add\",\n        component: PostCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: PostList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit/:id\",\n        component: PostEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nconst mapStateToProps = state => {\n  // console.lo\n  return {\n    posts: state.posts\n  };\n};\nexport default connect(mapStateToProps, {\n  resetSuccessMessage\n})(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","connect","PostList","PostCreate","ToastContainer","toast","Router","Route","resetSuccessMessage","history","PostEdit","Header","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","App","posts","successMessage","success","isLogin","profile","imageUrl","name","email","clientId","logOut","onSuccess","onFailure","setIslogin","mapStateToProps","state"],"sources":["/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PostList from './PostList';\r\nimport PostCreate from './PostCreate';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Router, Route } from 'react-router-dom';\r\nimport { resetSuccessMessage } from '../actions';\r\nimport history from '../history';\r\nimport PostEdit from './PostEdit';\r\nimport Header from './Header';\r\n\r\nconst toastConfig = {\r\n  position: 'top-center',\r\n  autoClose: 2000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n  theme: 'dark',\r\n};\r\n\r\nconst App = ({ resetSuccessMessage, posts }) => {\r\n \r\n\r\n  useEffect(() => {\r\n    if (posts.successMessage) {\r\n      toast.success(posts.successMessage, toastConfig);\r\n      resetSuccessMessage();\r\n    }\r\n  }, [posts.successMessage]);\r\n  return (\r\n    <div>\r\n      <h2>React Google Login</h2>\r\n      <br />\r\n      <br />\r\n      {isLogin ? (\r\n        <div>\r\n          <img src={profile.imageUrl} alt=\"user image ref\" referrerPolicy=\"no-referrer\" />\r\n          <h3>User Logged in</h3>\r\n          <p>Name: {profile.name}</p>\r\n          <p>Email Address: {profile.email}</p>\r\n          <br />\r\n          <br />\r\n          <GoogleLogout\r\n            clientId={clientId}\r\n            buttonText=\"Log out\"\r\n            onLogoutSuccess={logOut}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <GoogleLogin\r\n          clientId={clientId}\r\n          buttonText=\"Sign in with Google\"\r\n          onSuccess={onSuccess}\r\n          onFailure={onFailure}\r\n          cookiePolicy={'single_host_origin'}\r\n          isSignedIn={() => setIslogin(true)}\r\n        />\r\n      )}\r\n      <ToastContainer />\r\n      <Router history={history}>\r\n        <Route path=\"/\" component={Header} />\r\n        <Route path=\"/add\" component={PostCreate} />\r\n        <Route path=\"/\" exact component={PostList} />\r\n        <Route path=\"/edit/:id\" component={PostEdit} />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  // console.lo\r\n  return { posts: state.posts };\r\n};\r\nexport default connect(mapStateToProps, { resetSuccessMessage })(App);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAChD,SAASC,mBAAmB,QAAQ,YAAY;AAChD,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAAC;AAE9B,MAAMC,WAAW,GAAG;EAClBC,QAAQ,EAAE,YAAY;EACtBC,SAAS,EAAE,IAAI;EACfC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,IAAI;EAClBC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE,IAAI;EACfC,QAAQ,EAAEC,SAAS;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,GAAG,GAAG,QAAoC;EAAA;EAAA,IAAnC;IAAEd,mBAAmB;IAAEe;EAAM,CAAC;EAGzCvB,SAAS,CAAC,MAAM;IACd,IAAIuB,KAAK,CAACC,cAAc,EAAE;MACxBnB,KAAK,CAACoB,OAAO,CAACF,KAAK,CAACC,cAAc,EAAEZ,WAAW,CAAC;MAChDJ,mBAAmB,EAAE;IACvB;EACF,CAAC,EAAE,CAACe,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,eAC3B;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA;MAAA;MAAA;IAAA,QAAM,EACLE,OAAO,gBACN;MAAA,wBACE;QAAK,GAAG,EAAEC,OAAO,CAACC,QAAS;QAAC,GAAG,EAAC,gBAAgB;QAAC,cAAc,EAAC;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG,eAChF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAA,qBAAUD,OAAO,CAACE,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC3B;QAAA,8BAAmBF,OAAO,CAACG,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACrC;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAA;QAAA;QAAA;MAAA,QAAM,eACN,QAAC,YAAY;QACX,QAAQ,EAAEC,QAAS;QACnB,UAAU,EAAC,SAAS;QACpB,eAAe,EAAEC;MAAO;QAAA;QAAA;QAAA;MAAA,QACxB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,gBAEN,QAAC,WAAW;MACV,QAAQ,EAAED,QAAS;MACnB,UAAU,EAAC,qBAAqB;MAChC,SAAS,EAAEE,SAAU;MACrB,SAAS,EAAEC,SAAU;MACrB,YAAY,EAAE,oBAAqB;MACnC,UAAU,EAAE,MAAMC,UAAU,CAAC,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QAEtC,eACD,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAClB,QAAC,MAAM;MAAC,OAAO,EAAE1B,OAAQ;MAAA,wBACvB,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,SAAS,EAAEE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACrC,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAER;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5C,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,KAAK;QAAC,SAAS,EAAED;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAC7C,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAAC,SAAS,EAAEQ;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA/CIY,GAAG;AAAA,KAAHA,GAAG;AAgDT,MAAMc,eAAe,GAAIC,KAAK,IAAK;EACjC;EACA,OAAO;IAAEd,KAAK,EAAEc,KAAK,CAACd;EAAM,CAAC;AAC/B,CAAC;AACD,eAAetB,OAAO,CAACmC,eAAe,EAAE;EAAE5B;AAAoB,CAAC,CAAC,CAACc,GAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}