{"ast":null,"code":"var _jsxFileName = \"/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PostList from './PostList';\nimport PostCreate from './PostCreate';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport { resetSuccessMessage } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toastConfig = {\n  position: 'top-center',\n  autoClose: 2000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n  theme: 'dark'\n};\nconst App = _ref => {\n  _s();\n  let {\n    resetSuccessMessage,\n    posts\n  } = _ref;\n  useEffect(() => {\n    if (posts.successMessage) {\n      toast.success(posts.successMessage, toastConfig);\n      resetSuccessMessage();\n    }\n  }, [posts.successMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add\",\n        component: PostCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/list\",\n        exact: true,\n        component: PostList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nconst mapStateToProps = state => {\n  // console.lo\n  return {\n    posts: state.posts\n  };\n};\nexport default connect(mapStateToProps, {\n  resetSuccessMessage\n})(App);\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","connect","PostList","PostCreate","ToastContainer","toast","BrowserRouter","Route","Link","resetSuccessMessage","toastConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","App","posts","successMessage","success","mapStateToProps","state"],"sources":["/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/App.js"],"sourcesContent":["import React,{useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PostList from './PostList';\r\nimport PostCreate from './PostCreate';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { resetSuccessMessage } from '../actions';\r\n\r\nconst toastConfig = {\r\n  position: 'top-center',\r\n  autoClose: 2000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n  theme: 'dark',\r\n};\r\n\r\nconst App = ({resetSuccessMessage, posts}) => {\r\n  useEffect(() => {\r\n    if (posts.successMessage) {\r\n      toast.success(posts.successMessage, toastConfig);\r\n      resetSuccessMessage();\r\n    }\r\n  }, [posts.successMessage]);\r\n  return (\r\n    <div>\r\n      <ToastContainer />\r\n      <BrowserRouter>\r\n        <Route path=\"/add\" component={PostCreate} />\r\n        <Route path=\"/list\" exact component={PostList} />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  // console.lo\r\n  return { posts: state.posts };\r\n};\r\nexport default connect(mapStateToProps, { resetSuccessMessage })(App);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,QAAO,OAAO;AACrC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SAASC,aAAa,EAAEC,KAAK,EAAEC,IAAI,QAAQ,kBAAkB;AAC7D,SAASC,mBAAmB,QAAQ,YAAY;AAAC;AAEjD,MAAMC,WAAW,GAAG;EAClBC,QAAQ,EAAE,YAAY;EACtBC,SAAS,EAAE,IAAI;EACfC,eAAe,EAAE,KAAK;EACtBC,YAAY,EAAE,IAAI;EAClBC,YAAY,EAAE,IAAI;EAClBC,SAAS,EAAE,IAAI;EACfC,QAAQ,EAAEC,SAAS;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,GAAG,GAAG,QAAkC;EAAA;EAAA,IAAjC;IAACX,mBAAmB;IAAEY;EAAK,CAAC;EACvCrB,SAAS,CAAC,MAAM;IACd,IAAIqB,KAAK,CAACC,cAAc,EAAE;MACxBjB,KAAK,CAACkB,OAAO,CAACF,KAAK,CAACC,cAAc,EAAEZ,WAAW,CAAC;MAChDD,mBAAmB,EAAE;IACvB;EACF,CAAC,EAAE,CAACY,KAAK,CAACC,cAAc,CAAC,CAAC;EAC1B,oBACE;IAAA,wBACE,QAAC,cAAc;MAAA;MAAA;MAAA;IAAA,QAAG,eAClB,QAAC,aAAa;MAAA,wBACZ,QAAC,KAAK;QAAC,IAAI,EAAC,MAAM;QAAC,SAAS,EAAEnB;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5C,QAAC,KAAK;QAAC,IAAI,EAAC,OAAO;QAAC,KAAK;QAAC,SAAS,EAAED;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACZ;AAEV,CAAC;AAAC,GAhBIkB,GAAG;AAAA,KAAHA,GAAG;AAiBT,MAAMI,eAAe,GAAIC,KAAK,IAAK;EACjC;EACA,OAAO;IAAEJ,KAAK,EAAEI,KAAK,CAACJ;EAAM,CAAC;AAC/B,CAAC;AACD,eAAepB,OAAO,CAACuB,eAAe,EAAE;EAAEf;AAAoB,CAAC,CAAC,CAACW,GAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}