{"ast":null,"code":"var _jsxFileName = \"/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport DataTable from 'react-data-table-component';\nimport { connect } from 'react-redux';\nimport { setPosts, showForm, addPost, getPost } from '../actions';\nimport moment from 'moment/moment';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = _ref => {\n  _s();\n  let {\n    posts,\n    setPosts,\n    showForm,\n    addPost,\n    getPost\n  } = _ref;\n  console.log('posts', posts);\n  useEffect(() => {\n    setPosts();\n  }, []);\n  const columns = [{\n    name: 'ID',\n    selector: row => row.id\n  }, {\n    name: 'Title',\n    selector: row => row.title,\n    sortable: true\n  }, {\n    name: 'Description',\n    selector: row => row.body\n  }, {\n    name: 'Created Date',\n    selector: row => moment(row.createdAt).format('DD-MM-YYYY')\n  }, {\n    name: 'Action',\n    selector: row => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning\",\n        onClick: () => onEditRecord(row),\n        children: [\"Edit\", posts.onEditLoading && posts.selectedPostId === row.id ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-arrow-clockwise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }];\n  const onEditRecord = row => {\n    getPost(row.id);\n  };\n  const onFormSubmit = data => {\n    addPost({\n      title: data.title,\n      body: data.description,\n      createdAt: new Date().getTime()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header d-flex justify-content-between align -item-center m-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"POSTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => showForm(true),\n        children: [\"Add Post\", posts.addPostLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-arrow-clockwise\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), posts.showForm ? /*#__PURE__*/_jsxDEV(Form, {\n      onFormSubmit: onFormSubmit,\n      selectedPostDetails: posts.selectedPostDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: posts.data,\n      pagination: true,\n      progressPending: posts.loadingData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PostList;\nconst mapStateToProps = state => {\n  // console.log('state', state);\n  return {\n    posts: state.posts\n  };\n};\nexport default connect(mapStateToProps, {\n  setPosts,\n  showForm,\n  addPost,\n  getPost\n})(PostList);\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","_","DataTable","connect","setPosts","showForm","addPost","getPost","moment","Form","PostList","posts","console","log","columns","name","selector","row","id","title","sortable","body","createdAt","format","onEditRecord","onEditLoading","selectedPostId","onFormSubmit","data","description","Date","getTime","addPostLoading","selectedPostDetails","loadingData","mapStateToProps","state"],"sources":["/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport DataTable from 'react-data-table-component';\r\nimport { connect } from 'react-redux';\r\nimport { setPosts, showForm, addPost, getPost } from '../actions';\r\nimport moment from 'moment/moment';\r\nimport Form from './Form';\r\n\r\nconst PostList = ({ posts, setPosts, showForm, addPost, getPost }) => {\r\n  console.log('posts', posts);\r\n  useEffect(() => {\r\n    setPosts();\r\n  }, []);\r\n\r\n  const columns = [\r\n    {\r\n      name: 'ID',\r\n      selector: (row) => row.id,\r\n    },\r\n    {\r\n      name: 'Title',\r\n      selector: (row) => row.title,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: 'Description',\r\n      selector: (row) => row.body,\r\n    },\r\n    {\r\n      name: 'Created Date',\r\n      selector: (row) => moment(row.createdAt).format('DD-MM-YYYY'),\r\n    },\r\n    {\r\n      name: 'Action',\r\n      selector: (row) => (\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning\"\r\n            onClick={() => onEditRecord(row)}\r\n          >\r\n            Edit\r\n            {posts.onEditLoading && posts.selectedPostId === row.id ? (\r\n              <i className=\"bi bi-arrow-clockwise\"></i>\r\n            ) : null}\r\n          </button>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const onEditRecord = (row) => {\r\n    getPost(row.id);\r\n  };\r\n\r\n  const onFormSubmit = (data) => {\r\n    addPost({\r\n      title: data.title,\r\n      body: data.description,\r\n      createdAt: new Date().getTime(),\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"header d-flex justify-content-between align -item-center m-2\">\r\n        <h1>POSTS</h1>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => showForm(true)}\r\n        >\r\n          Add Post\r\n          {posts.addPostLoading ? (\r\n            <i className=\"bi bi-arrow-clockwise\"></i>\r\n          ) : null}\r\n        </button>\r\n      </div>\r\n      {posts.showForm ? (\r\n        <Form\r\n          onFormSubmit={onFormSubmit}\r\n          selectedPostDetails={posts.selectedPostDetails}\r\n        />\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={posts.data}\r\n          pagination\r\n          progressPending={posts.loadingData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log('state', state);\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setPosts,\r\n  showForm,\r\n  addPost,\r\n  getPost,\r\n})(PostList);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}