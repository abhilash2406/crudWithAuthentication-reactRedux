{"ast":null,"code":"var _jsxFileName = \"/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/Routes/PublicRoute.js\";\nimport { Route } from 'react-router-dom';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PublicRoute = _ref => {\n  let {\n    children,\n    isAuthenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n};\n_c = PublicRoute;\nexport default PublicRoute;\n\n// import React from 'react';\n\n// import { Route, Redirect } from 'react-router-dom';\n\n// const PublicRoute = ({restricted, children, ...rest }) => {\n//   const isAuthenticated = localStorage.getItem('isAuthenticated');\n//   // console.log(isAuthenticated);\n//   console.log(restricted);\n\n//   return (\n//     <Route\n//       {...rest}\n//       render={({ location }) =>\n//         isAuthenticated === true && restricted === true ? (\n//           <Redirect\n//           to={{\n//             pathname: '/',\n//             state: { from: location },\n//           }}\n//         />\n//         ) : (\n//           children\n//         )\n//       }\n//     />\n//   );\n// };\n\n// export default PublicRoute;\nvar _c;\n$RefreshReg$(_c, \"PublicRoute\");","map":{"version":3,"names":["Route","React","PublicRoute","children","isAuthenticated","rest"],"sources":["/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/Routes/PublicRoute.js"],"sourcesContent":["\nimport { Route } from 'react-router-dom';\nimport React from 'react';\n\nconst PublicRoute = ({ children, isAuthenticated, ...rest }) => {\n  return <Route {...rest} />;\n};\nexport default PublicRoute;\n\n// import React from 'react';\n\n// import { Route, Redirect } from 'react-router-dom';\n\n// const PublicRoute = ({restricted, children, ...rest }) => {\n//   const isAuthenticated = localStorage.getItem('isAuthenticated');\n//   // console.log(isAuthenticated);\n//   console.log(restricted);\n\n//   return (\n//     <Route\n//       {...rest}\n//       render={({ location }) =>\n//         isAuthenticated === true && restricted === true ? (\n//           <Redirect\n//           to={{\n//             pathname: '/',\n//             state: { from: location },\n//           }}\n//         />\n//         ) : (\n//           children\n//         )\n//       }\n//     />\n//   );\n// };\n\n// export default PublicRoute;\n"],"mappings":";AACA,SAASA,KAAK,QAAQ,kBAAkB;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,WAAW,GAAG,QAA4C;EAAA,IAA3C;IAAEC,QAAQ;IAAEC,eAAe;IAAE,GAAGC;EAAK,CAAC;EACzD,oBAAO,QAAC,KAAK;IAAA,GAAKA;EAAI;IAAA;IAAA;IAAA;EAAA,QAAI;AAC5B,CAAC;AAAC,KAFIH,WAAW;AAGjB,eAAeA,WAAW;;AAE1B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}