{"ast":null,"code":"var _jsxFileName = \"/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport _ from 'lodash';\nimport DataTable from 'react-data-table-component';\nimport { connect } from 'react-redux';\nimport { setPosts, showForm, addPost, getPost } from '../actions';\nimport moment from 'moment/moment';\nimport Form from './Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: 'ID',\n  selector: row => row.id\n}, {\n  name: 'Title',\n  selector: row => row.title,\n  sortable: true\n}, {\n  name: 'Description',\n  selector: row => row.body\n}, {\n  name: 'Created Date',\n  selector: row => moment(row.createdAt).format('DD-MM-YYYY')\n}, {\n  name: 'Action',\n  selector: row => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-warning\",\n      onClick: () => onEditRecord(row),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 24\n  }, this)\n}];\nconst onEditRecord = row => {\n  getPost(row);\n};\nconst PostList = _ref => {\n  _s();\n  let {\n    posts,\n    setPosts,\n    showForm,\n    addPost\n  } = _ref;\n  useEffect(() => {\n    setPosts();\n  }, []);\n  const onFormSubmit = data => {\n    addPost({\n      title: data.title,\n      body: data.description,\n      createdAt: new Date().getTime()\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header d-flex justify-content-between align -item-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"POSTS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: () => showForm(true),\n        children: [\"Add Post\", posts.addPostLoading ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-bullseye\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 35\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), posts.showForm ? /*#__PURE__*/_jsxDEV(Form, {\n      onFormSubmit: onFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      columns: columns,\n      data: posts.data,\n      pagination: true,\n      progressPending: posts.loadingData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PostList;\nconst mapStateToProps = state => {\n  // console.log('state', state);\n  return {\n    posts: state.posts\n  };\n};\nexport default connect(mapStateToProps, {\n  setPosts,\n  showForm,\n  addPost\n})(PostList);\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","_","DataTable","connect","setPosts","showForm","addPost","getPost","moment","Form","columns","name","selector","row","id","title","sortable","body","createdAt","format","onEditRecord","PostList","posts","onFormSubmit","data","description","Date","getTime","addPostLoading","loadingData","mapStateToProps","state"],"sources":["/home/abhilash/Workspace/Training/Redux/Crud_json/crudjson/src/components/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport DataTable from 'react-data-table-component';\r\nimport { connect } from 'react-redux';\r\nimport { setPosts, showForm, addPost, getPost } from '../actions';\r\nimport moment from 'moment/moment';\r\nimport Form from './Form';\r\n\r\nconst columns = [\r\n  {\r\n    name: 'ID',\r\n    selector: (row) => row.id,\r\n  },\r\n  {\r\n    name: 'Title',\r\n    selector: (row) => row.title,\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'Description',\r\n    selector: (row) => row.body,\r\n  },\r\n  {\r\n    name: 'Created Date',\r\n    selector: (row) => moment(row.createdAt).format('DD-MM-YYYY'),\r\n  },\r\n  {\r\n    name: 'Action',\r\n    selector: (row) => <div><button type=\"button\" class=\"btn btn-warning\" onClick={()=> onEditRecord(row)}>Edit</button></div>,\r\n  },\r\n];\r\n\r\nconst onEditRecord =(row)=> {\r\n  getPost(row)\r\n}\r\n\r\nconst PostList = ({ posts, setPosts, showForm, addPost }) => {\r\n  useEffect(() => {\r\n    setPosts();\r\n  }, []);\r\n  const onFormSubmit = (data) => {\r\n    addPost({\r\n      title: data.title,\r\n      body: data.description,\r\n      createdAt: new Date().getTime(),\r\n    });\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"header d-flex justify-content-between align -item-center\">\r\n        <h1>POSTS</h1>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary\"\r\n          onClick={() => showForm(true)}\r\n        >\r\n          Add Post\r\n          {posts.addPostLoading ? <i className=\"bi bi-bullseye\"></i> : null}\r\n        </button>\r\n      </div>\r\n      {posts.showForm ? (\r\n        <Form onFormSubmit={onFormSubmit} />\r\n      ) : (\r\n        <DataTable\r\n          columns={columns}\r\n          data={posts.data}\r\n          pagination\r\n          progressPending={posts.loadingData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log('state', state);\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setPosts, showForm, addPost })(\r\n  PostList\r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}